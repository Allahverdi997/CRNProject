// <auto-generated />
using System;
using CRNProject_DataAccessLayer.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRNProject_DataAccessLayer.Migrations
{
    [DbContext(typeof(CNRContext))]
    partial class CNRContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CRNProject_Entities.Concrete.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<int?>("LangTableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoCopyr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LangTableId");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltIndustry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<int?>("LangTableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MainProductId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LangTableId");

                    b.HasIndex("MainProductId");

                    b.ToTable("AltIndustries");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltIndustryFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AltIndustryId")
                        .HasColumnType("int");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AltIndustryId");

                    b.ToTable("MyProperty");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltIndustryImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AltIndustrImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AltIndustryImages");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<int?>("LangTableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MainProductId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LangTableId");

                    b.HasIndex("MainProductId");

                    b.ToTable("AltProducts");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltProductFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AltProductId")
                        .HasColumnType("int");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AltProductId");

                    b.ToTable("AltProductFiles");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AltProductId")
                        .HasColumnType("int");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AltProductId");

                    b.ToTable("AltProductImages");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<int?>("LangTableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("ProitId")
                        .HasColumnType("int");

                    b.Property<string>("SeoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoCopyr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LangTableId");

                    b.HasIndex("MenuId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.CompanyPoliticy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoCopyr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyPoliticies");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.ConstantValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstantValues");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoCopyr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.ContactMail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactMails");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.CookiesPolitics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoCopyr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CookiesPolitics");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.LangTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LangName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LangTables");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.MainIndustry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<int?>("LangTableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoCopyr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LangTableId");

                    b.ToTable("MainIndustries");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.MainPageInformationTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MainPageInformationTitles");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.MainProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicationMainActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductMainActive")
                        .HasColumnType("bit");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<int?>("LangTableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoCopyr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LangTableId");

                    b.ToTable("MainProducts");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<int?>("LangTableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoCopyr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LangTableId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.SecurityPolicies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeoAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoCopyr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDesign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoFacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SecurityPolicies");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<int?>("LangTableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LangTableId");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.About", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.LangTable", "LangTable")
                        .WithMany("Abouts")
                        .HasForeignKey("LangTableId");

                    b.Navigation("LangTable");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltIndustry", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.LangTable", "LangTable")
                        .WithMany("AltIndustries")
                        .HasForeignKey("LangTableId");

                    b.HasOne("CRNProject_Entities.Concrete.MainProduct", "MainProduct")
                        .WithMany("AltIndustries")
                        .HasForeignKey("MainProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LangTable");

                    b.Navigation("MainProduct");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltIndustryFile", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.AltIndustry", "AltIndustry")
                        .WithMany("AltIndustryFiles")
                        .HasForeignKey("AltIndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AltIndustry");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltProduct", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.LangTable", "LangTable")
                        .WithMany("AltProducts")
                        .HasForeignKey("LangTableId");

                    b.HasOne("CRNProject_Entities.Concrete.MainProduct", "MainProduct")
                        .WithMany("AltProducts")
                        .HasForeignKey("MainProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LangTable");

                    b.Navigation("MainProduct");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltProductFile", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.AltProduct", "AltProduct")
                        .WithMany("AltProductFiles")
                        .HasForeignKey("AltProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AltProduct");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltProductImage", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.AltProduct", "AltProduct")
                        .WithMany("AltProductImage")
                        .HasForeignKey("AltProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AltProduct");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.Category", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.LangTable", "LangTable")
                        .WithMany("Categories")
                        .HasForeignKey("LangTableId");

                    b.HasOne("CRNProject_Entities.Concrete.Menu", "Menu")
                        .WithMany("Categories")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LangTable");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.MainIndustry", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.Category", "Category")
                        .WithMany("MainIndustries")
                        .HasForeignKey("CategoryId");

                    b.HasOne("CRNProject_Entities.Concrete.LangTable", "LangTable")
                        .WithMany("MainIndustries")
                        .HasForeignKey("LangTableId");

                    b.Navigation("Category");

                    b.Navigation("LangTable");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.MainProduct", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.Category", "Category")
                        .WithMany("MainProducts")
                        .HasForeignKey("CategoryId");

                    b.HasOne("CRNProject_Entities.Concrete.LangTable", "LangTable")
                        .WithMany("MainProducts")
                        .HasForeignKey("LangTableId");

                    b.Navigation("Category");

                    b.Navigation("LangTable");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.Menu", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.LangTable", "LangTable")
                        .WithMany("Menus")
                        .HasForeignKey("LangTableId");

                    b.Navigation("LangTable");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.Slider", b =>
                {
                    b.HasOne("CRNProject_Entities.Concrete.LangTable", "LangTable")
                        .WithMany("Sliders")
                        .HasForeignKey("LangTableId");

                    b.Navigation("LangTable");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltIndustry", b =>
                {
                    b.Navigation("AltIndustryFiles");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.AltProduct", b =>
                {
                    b.Navigation("AltProductFiles");

                    b.Navigation("AltProductImage");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.Category", b =>
                {
                    b.Navigation("MainIndustries");

                    b.Navigation("MainProducts");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.LangTable", b =>
                {
                    b.Navigation("Abouts");

                    b.Navigation("AltIndustries");

                    b.Navigation("AltProducts");

                    b.Navigation("Categories");

                    b.Navigation("MainIndustries");

                    b.Navigation("MainProducts");

                    b.Navigation("Menus");

                    b.Navigation("Sliders");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.MainProduct", b =>
                {
                    b.Navigation("AltIndustries");

                    b.Navigation("AltProducts");
                });

            modelBuilder.Entity("CRNProject_Entities.Concrete.Menu", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
